[gd_scene load_steps=15 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://Water.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void vertex(){
	VERTEX.y += 2.0 * sin(VERTEX.x*10.0 + TIME*5.0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

void fragment(){
	COLOR = texture(TEXTURE, UV);
	COLOR.rgb = vec3(COLOR.r+ COLOR.g+ COLOR.b)/3.0;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

void fragment(){
	vec4 color = vec4(textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0));
	COLOR = vec4(color);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

void fragment(){
	vec4 bg = texture(SCREEN_TEXTURE, SCREEN_UV);
	float avg = (bg.r + bg.g + bg.b)/3f;
	COLOR = vec4(avg, avg, avg, 1f);
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

uniform vec2 scale;
uniform float y_zoom;
uniform sampler2D noise;
uniform vec4 water_color : hint_color;
uniform vec2 distortion_scale;
uniform float intensity;
uniform float speed;

uniform float wave_amplitude;
uniform float wave_speed;
uniform float wave_period;

void fragment(){
	float waves = UV.y * scale.y + sin(UV.x * scale.x / wave_period - TIME * wave_speed) * cos(0.2 * UV.x * scale.x / wave_period - TIME * wave_speed) * wave_amplitude - wave_amplitude;
	
	float distortion = texture(noise, UV*distortion_scale + TIME*speed).x;
	distortion -= 0.5;
	
	float uv_height = SCREEN_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.y;
	vec2 reflected_screenuv = vec2(SCREEN_UV.x - distortion * intensity * y_zoom, SCREEN_UV.y + uv_height * UV.y * scale.y * y_zoom * 2.0);
	
	vec4 reflection = texture(SCREEN_TEXTURE, reflected_screenuv);
	COLOR.rgb = mix(reflection.rgb, water_color.rgb, water_color.a);
	COLOR.a = smoothstep(0.1, 0.13, waves);
}	"

[sub_resource type="OpenSimplexNoise" id=10]

[sub_resource type="NoiseTexture" id=11]
seamless = true
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 9 )
shader_param/scale = Vector2( 16.0156, 4.71892 )
shader_param/y_zoom = 1.0
shader_param/water_color = Color( 0.207843, 0.290196, 0.603922, 0.509804 )
shader_param/distortion_scale = Vector2( 0.05, 0.4 )
shader_param/intensity = 0.041
shader_param/speed = 0.036
shader_param/wave_amplitude = 0.063
shader_param/wave_speed = 1.029
shader_param/wave_period = 0.356
shader_param/noise = SubResource( 11 )

[node name="Shaders_Test" type="Node2D"]

[node name="icon" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 182.5, 99.5 )
scale = Vector2( 2.82813, 1.98438 )
z_index = -2
texture = ExtResource( 1 )

[node name="icon2" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 439, 92 )
z_index = -2
texture = ExtResource( 1 )

[node name="icon3" type="Sprite" parent="."]
position = Vector2( 597, 92 )
z_index = -1
texture = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="icon3"]
material = SubResource( 6 )
margin_left = -3.0
margin_top = -50.0
margin_right = 59.0
margin_bottom = 51.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="icon4" type="Sprite" parent="."]
position = Vector2( 758, 86 )
z_index = -2
texture = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 8 )
margin_left = 759.0
margin_top = 46.0
margin_right = 847.0
margin_bottom = 129.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="icon5" type="Sprite" parent="."]
position = Vector2( 898, 86 )
z_index = -2
texture = ExtResource( 1 )

[node name="Water" type="Sprite" parent="."]
material = SubResource( 12 )
position = Vector2( 512.5, 313.679 )
scale = Vector2( 16.0156, 4.71892 )
texture = ExtResource( 1 )
script = ExtResource( 2 )

[connection signal="item_rect_changed" from="Water" to="Water" method="_on_Water_item_rect_changed"]
